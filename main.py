from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton
from requests import request

bot = Bot(token='5453501886:AAE49LmQsZ6vZDC-_sg4muhfUH5pKqMVppk')
dp = Dispatcher(bot)

b1 = KeyboardButton('–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É')
b2 = KeyboardButton('–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É')
b3 = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é', request_location=True)

otmetka = ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True).add(b1).add(b2)
loc = ReplyKeyboardMarkup(resize_keyboard = True, one_time_keyboard = True).add(b3)

@dp.message_handler(content_types=['location'])
async def handle_location(message: types.Message):
    lat = message.location.latitude
    lon = message.location.longitude
    reply = "latitude:  {}\nlongitude: {}".format(lat, lon)
    await message.answer(reply, reply_markup=types.ReplyKeyboardRemove())
    await message.answer(' ‚úÖ –°–º–µ–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ \n üîì –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É –ø–µ—Ä–µ–¥ —Ä–∞–±–æ—Ç–æ–π üòÅ \n üîê –∑–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã üòÅ')
    await message.answer('–•–æ—Ä–æ—à–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è üòÅ, –ò–∑–∑–ò –ª—é–±–∏—Ç —Ç–µ–±—è –∏ —Ü–µ–Ω–∏—Ç ‚ù§Ô∏è', reply_markup=otmetka)
@dp.message_handler(commands = ['start', 'help'])
async def welcome(message: types.Message):
  await message.reply(f"–ê—Å—Å–∞–ª–∞–º—É –ê–ª–µ–∏–∫—É–º —Ä–æ–¥–Ω–æ–æ–πüí• \n–î–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—è –ò–∑–∑–ò‚ú® –º—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –æ—Ç–º–µ—Ç–∫–∏ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∞–Ω–¥—ã –ò–∑–∑–òüß° \n–î–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ—Å–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–µ–ª–æ–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä \nK–∞–∂–¥—ã–π –¥–µ–Ω—å –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–º–µ—á–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –∏ –ø–æ—Å–ª–µ –µ–≥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ \n", reply_markup=otmetka)

@dp.message_handler()
async def answer(message: types.Message):
    if message.text == '–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É':
         await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–∫–∞—Ü–∏—é –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–º–µ–Ω—ã üìç ', reply_markup=loc)
    elif message.text == '–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É':
         await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–∫–∞—Ü–∏—é –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–º–µ–Ω—ã üìç', reply_markup=loc)
executor.start_polling(dp)